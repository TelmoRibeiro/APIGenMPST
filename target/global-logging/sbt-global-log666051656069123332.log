[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\telmo\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\telmo\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Amazon.com Inc. Java 17.0.9)
[debug]       Load.loadUnit: plugins took 65.4399ms
[debug]       Load.loadUnit: defsScala took 0.2111ms
[debug] [Loading] Scanning directory C:\Users\telmo\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\telmo\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 11.0908 ms
[debug]           Load.resolveProject(global-plugins) took 28.8572ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\telmo\.sbt\1.0\plugins, plugins: List(<none>))) took 52.4527ms
[debug] [Loading] Done in C:\Users\telmo\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 67.0214ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1553ms
[debug]     Load.loadUnit(file:/C:/Users/telmo/.sbt/1.0/plugins/, ...) took 142.5093ms
[debug]   Load.apply: load took 291.6886ms
[debug]   Load.apply: resolveProjects took 4.2571ms
[debug]   Load.apply: finalTransforms took 52.2021ms
[debug]   Load.apply: config.delegates took 20.1141ms
[debug]   Load.apply: Def.make(settings)... took 495.6133ms
[debug]   Load.apply: structureIndex took 113.4204ms
[debug]   Load.apply: mkStreams took 4.4714ms
[info] loading global plugins from C:\Users\telmo\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4690.9857ms
[debug]           Load.loadUnit: plugins took 17.5819ms
[debug]           Load.loadUnit: defsScala took 0.0035ms
[debug] [Loading] Scanning directory C:\Users\telmo\OneDrive\Desktop\Dissertation\APIGenMPST\project
[debug]             Load.loadUnit: mkEval took 3.6151ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\telmo\OneDrive\Desktop\Dissertation\APIGenMPST\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.2887 ms
[info] loading settings for project apigenmpst-build from idea.sbt ...
[debug]               Load.resolveProject(apigenmpst-build) took 9.4404ms
[debug]             Load.loadTransitive: finalizeProject(Project(id apigenmpst-build, base: C:\Users\telmo\OneDrive\Desktop\Dissertation\APIGenMPST\project, plugins: List(<none>))) took 11.1662ms
[debug] [Loading] Done in C:\Users\telmo\OneDrive\Desktop\Dissertation\APIGenMPST\project, returning: (apigenmpst-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2075.5707ms
[debug]           Load.loadUnit: cleanEvalClasses took 10.7589ms
[debug]         Load.loadUnit(file:/C:/Users/telmo/OneDrive/Desktop/Dissertation/APIGenMPST/project/, ...) took 2104.7047ms
[debug]       Load.apply: load took 2105.9847ms
[debug]       Load.apply: resolveProjects took 0.1919ms
[debug]       Load.apply: finalTransforms took 10.1583ms
[debug]       Load.apply: config.delegates took 0.5032ms
[debug]       Load.apply: Def.make(settings)... took 88.1499ms
[debug]       Load.apply: structureIndex took 24.6636ms
[debug]       Load.apply: mkStreams took 0.0036ms
[info] loading project definition from C:\Users\telmo\OneDrive\Desktop\Dissertation\APIGenMPST\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3694.4088ms
[debug]     Load.loadUnit: defsScala took 0.0024ms
[debug] [Loading] Scanning directory C:\Users\telmo\OneDrive\Desktop\Dissertation\APIGenMPST
[debug]       Load.loadUnit: mkEval took 0.2892ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.9628 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 40.1987ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\telmo\OneDrive\Desktop\Dissertation\APIGenMPST, plugins: List(<none>))) took 44.2526ms
[debug] [Loading] Done in C:\Users\telmo\OneDrive\Desktop\Dissertation\APIGenMPST, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1134.3462ms
[debug]     Load.loadUnit: cleanEvalClasses took 12.718ms
[debug]   Load.loadUnit(file:/C:/Users/telmo/OneDrive/Desktop/Dissertation/APIGenMPST/, ...) took 4842.2559ms
[debug] Load.apply: load took 4844.1392ms
[debug] Load.apply: resolveProjects took 0.1458ms
[debug] Load.apply: finalTransforms took 31.5816ms
[debug] Load.apply: config.delegates took 0.4175ms
[debug] Load.apply: Def.make(settings)... took 77.2608ms
[debug] Load.apply: structureIndex took 20.5606ms
[debug] Load.apply: mkStreams took 0.0028ms
[info] set current project to APIGenMPST (in build file:/C:/Users/telmo/OneDrive/Desktop/Dissertation/APIGenMPST/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 65218 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 65218, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to APIGenMPST (in build file:/C:/Users/telmo/OneDrive/Desktop/Dissertation/APIGenMPST/)
[debug] > Exec(idea-shell, None, None)
