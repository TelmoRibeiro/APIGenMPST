[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Amazon.com Inc. Java 17.0.9)
[debug] Load.defaultLoad until apply took 390.6208ms
[debug]           Load.loadUnit: plugins took 125.0299ms
[debug]           Load.loadUnit: defsScala took 0.4113ms
[debug] [Loading] Scanning directory C:\Users\telmo\Desktop\Dissertation\APIGenMPST\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\telmo\Desktop\Dissertation\APIGenMPST\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 25.413 ms
[debug]               Load.resolveProject(apigenmpst-build) took 67.4221ms
[debug]             Load.loadTransitive: finalizeProject(Project(id apigenmpst-build, base: C:\Users\telmo\Desktop\Dissertation\APIGenMPST\project, plugins: List(<none>))) took 121.962ms
[debug] [Loading] Done in C:\Users\telmo\Desktop\Dissertation\APIGenMPST\project, returning: (apigenmpst-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 159.3916ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.4222ms
[debug]         Load.loadUnit(file:/C:/Users/telmo/Desktop/Dissertation/APIGenMPST/project/, ...) took 295.5393ms
[debug]       Load.apply: load took 581.0458ms
[debug]       Load.apply: resolveProjects took 11.5993ms
[debug]       Load.apply: finalTransforms took 84.0734ms
[debug]       Load.apply: config.delegates took 10.771ms
[debug]       Load.apply: Def.make(settings)... took 612.5056ms
[debug]       Load.apply: structureIndex took 192.4248ms
[debug]       Load.apply: mkStreams took 9.1792ms
[info] loading project definition from C:\Users\telmo\Desktop\Dissertation\APIGenMPST\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2919.2936ms
[debug]     Load.loadUnit: defsScala took 0.0043ms
[debug] [Loading] Scanning directory C:\Users\telmo\Desktop\Dissertation\APIGenMPST
[debug]       Load.loadUnit: mkEval took 4.3886ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.3872 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 3.377ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\telmo\Desktop\Dissertation\APIGenMPST, plugins: List(<none>))) took 6.8427ms
[debug] [Loading] Done in C:\Users\telmo\Desktop\Dissertation\APIGenMPST, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 168.036ms
[debug]     Load.loadUnit: cleanEvalClasses took 10.9221ms
[debug]   Load.loadUnit(file:/C:/Users/telmo/Desktop/Dissertation/APIGenMPST/, ...) took 3100.957ms
[debug] Load.apply: load took 3147.2189ms
[debug] Load.apply: resolveProjects took 0.1155ms
[debug] Load.apply: finalTransforms took 8.2033ms
[debug] Load.apply: config.delegates took 0.5308ms
[debug] Load.apply: Def.make(settings)... took 73.5527ms
[debug] Load.apply: structureIndex took 33.0467ms
[debug] Load.apply: mkStreams took 0.0074ms
[info] set current project to APIGenMPST (in build file:/C:/Users/telmo/Desktop/Dissertation/APIGenMPST/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-8197b17d16166f5c751f
[debug] Writing bsp connection file
[info] started sbt server
