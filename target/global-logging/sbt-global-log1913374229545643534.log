[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\telmo\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\telmo\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.8 (Oracle Corporation Java 21.0.2)
[debug] Load.defaultLoad until apply took 586.3654ms
[debug]           Load.loadUnit: plugins took 339.5192ms
[debug]           Load.loadUnit: defsScala took 0.417ms
[debug] [Loading] Scanning directory C:\Users\telmo\Desktop\Dissertation\APIGenMPST\project
[debug]             Load.loadUnit: mkEval took 9.5228ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\telmo\Desktop\Dissertation\APIGenMPST\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 11.4031 ms
[info] loading settings for project apigenmpst-build from plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(apigenmpst-build) took 36.9719ms
[debug]             Load.loadTransitive: finalizeProject(Project(id apigenmpst-build, base: C:\Users\telmo\Desktop\Dissertation\APIGenMPST\project, plugins: List(<none>))) took 55.438ms
[debug] [Loading] Done in C:\Users\telmo\Desktop\Dissertation\APIGenMPST\project, returning: (apigenmpst-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 5794.3506ms
[debug]           Load.loadUnit: cleanEvalClasses took 8.5563ms
[debug]         Load.loadUnit(file:/C:/Users/telmo/Desktop/Dissertation/APIGenMPST/project/, ...) took 6158.2995ms
[debug]       Load.apply: load took 6273.5327ms
[debug]       Load.apply: resolveProjects took 3.9029ms
[debug]       Load.apply: finalTransforms took 48.637ms
[debug]       Load.apply: config.delegates took 7.7753ms
[debug]       Load.apply: Def.make(settings)... took 436.3686ms
[debug]       Load.apply: structureIndex took 149.8016ms
[debug]       Load.apply: mkStreams took 4.7718ms
[info] loading project definition from C:\Users\telmo\Desktop\Dissertation\APIGenMPST\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 8951.1855ms
[debug]     Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory C:\Users\telmo\Desktop\Dissertation\APIGenMPST
[debug]       Load.loadUnit: mkEval took 0.2019ms
[debug] [Loading] Found root project APIGenMPSTBuild w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(org.scalajs.sbtplugin.ScalaJSPlugin), Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.scalajs.sbtplugin.ScalaJSPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,org.scalajs.sbtplugin.ScalaJSPlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,org.portablescala.sbtplatformdeps.PlatformDepsPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.2616 ms
[info] loading settings for project APIGenMPSTBuild from build.sbt ...
[debug]         Load.resolveProject(APIGenMPSTBuild) took 36.8979ms
[debug]       Load.loadTransitive: finalizeProject(Project(id APIGenMPSTBuild, base: C:\Users\telmo\Desktop\Dissertation\APIGenMPST, plugins: List(org.scalajs.sbtplugin.ScalaJSPlugin))) took 42.877ms
[debug] [Loading] Done in C:\Users\telmo\Desktop\Dissertation\APIGenMPST, returning: (APIGenMPSTBuild)
[debug]     Load.loadUnit: loadedProjectsRaw took 1457.9334ms
[debug]     Load.loadUnit: cleanEvalClasses took 24.8029ms
[debug]   Load.loadUnit(file:/C:/Users/telmo/Desktop/Dissertation/APIGenMPST/, ...) took 10437.6293ms
[debug] Load.apply: load took 10488.9183ms
[debug] Load.apply: resolveProjects took 0.1522ms
[debug] Load.apply: finalTransforms took 31.9536ms
[debug] Load.apply: config.delegates took 0.6945ms
[debug] Load.apply: Def.make(settings)... took 129.8613ms
[debug] Load.apply: structureIndex took 37.3695ms
[debug] Load.apply: mkStreams took 0.0046ms
[info] set current project to APIGenMPST (in build file:/C:/Users/telmo/Desktop/Dissertation/APIGenMPST/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 57767 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 57767, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to APIGenMPST (in build file:/C:/Users/telmo/Desktop/Dissertation/APIGenMPST/)
[debug] > Exec(idea-shell, None, None)
