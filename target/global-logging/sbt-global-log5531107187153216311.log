[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\telmo\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\telmo\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Oracle Corporation Java 17.0.7)
[debug]       Load.loadUnit: plugins took 233.8059ms
[debug]       Load.loadUnit: defsScala took 0.251ms
[debug] [Loading] Scanning directory C:\Users\telmo\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\telmo\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 13.7689 ms
[debug]           Load.resolveProject(global-plugins) took 35.0366ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\telmo\.sbt\1.0\plugins, plugins: List(<none>))) took 63.6887ms
[debug] [Loading] Done in C:\Users\telmo\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 85.4406ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2217ms
[debug]     Load.loadUnit(file:/C:/Users/telmo/.sbt/1.0/plugins/, ...) took 329.2357ms
[debug]   Load.apply: load took 497.2015ms
[debug]   Load.apply: resolveProjects took 4.2407ms
[debug]   Load.apply: finalTransforms took 56.2709ms
[debug]   Load.apply: config.delegates took 11.5934ms
[debug]   Load.apply: Def.make(settings)... took 513.7937ms
[debug]   Load.apply: structureIndex took 153.6405ms
[debug]   Load.apply: mkStreams took 5.2813ms
[info] loading global plugins from C:\Users\telmo\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2804.4687ms
[debug]           Load.loadUnit: plugins took 33.7786ms
[debug]           Load.loadUnit: defsScala took 0.0061ms
[debug] [Loading] Scanning directory C:\Users\telmo\OneDrive\Desktop\APIGenMPST\project
[debug]             Load.loadUnit: mkEval took 8.7004ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\telmo\OneDrive\Desktop\APIGenMPST\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.9409 ms
[info] loading settings for project apigenmpst-build from idea1.sbt ...
[debug]               Load.resolveProject(apigenmpst-build) took 8.3944ms
[debug]             Load.loadTransitive: finalizeProject(Project(id apigenmpst-build, base: C:\Users\telmo\OneDrive\Desktop\APIGenMPST\project, plugins: List(<none>))) took 10.9592ms
[debug] [Loading] Done in C:\Users\telmo\OneDrive\Desktop\APIGenMPST\project, returning: (apigenmpst-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2434.2615ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.7468ms
[debug]         Load.loadUnit(file:/C:/Users/telmo/OneDrive/Desktop/APIGenMPST/project/, ...) took 2474.041ms
[debug]       Load.apply: load took 2476.3722ms
[debug]       Load.apply: resolveProjects took 0.2585ms
[debug]       Load.apply: finalTransforms took 11.6458ms
[debug]       Load.apply: config.delegates took 0.4809ms
[debug]       Load.apply: Def.make(settings)... took 59.6235ms
[debug]       Load.apply: structureIndex took 25.9978ms
[debug]       Load.apply: mkStreams took 0.0058ms
[info] loading project definition from C:\Users\telmo\OneDrive\Desktop\APIGenMPST\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3769.0779ms
[debug]     Load.loadUnit: defsScala took 0.013ms
[debug] [Loading] Scanning directory C:\Users\telmo\OneDrive\Desktop\APIGenMPST
[debug]       Load.loadUnit: mkEval took 0.4299ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.2366 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 77.0485ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\telmo\OneDrive\Desktop\APIGenMPST, plugins: List(<none>))) took 81.9177ms
[debug] [Loading] Done in C:\Users\telmo\OneDrive\Desktop\APIGenMPST, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1421.8885ms
[debug]     Load.loadUnit: cleanEvalClasses took 15.7181ms
[debug]   Load.loadUnit(file:/C:/Users/telmo/OneDrive/Desktop/APIGenMPST/, ...) took 5208.3957ms
[debug] Load.apply: load took 5211.2244ms
[debug] Load.apply: resolveProjects took 0.1847ms
[debug] Load.apply: finalTransforms took 38.0387ms
[debug] Load.apply: config.delegates took 0.4541ms
[debug] Load.apply: Def.make(settings)... took 75.1954ms
[debug] Load.apply: structureIndex took 22.8592ms
[debug] Load.apply: mkStreams took 0.0044ms
[info] set current project to APIGenMPST (in build file:/C:/Users/telmo/OneDrive/Desktop/APIGenMPST/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 51863 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 51863, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to APIGenMPST (in build file:/C:/Users/telmo/OneDrive/Desktop/APIGenMPST/)
[debug] > Exec(idea-shell, None, None)
